# Модуль os представляет множество функций для работы с операционной системой, причем их поведение,
# как правило, не зависит от ОС, поэтому программы остаются переносимыми.
#
# Для того, чтобы начать работать с данным модулем необходимо его импортировать в свою программу:

# import os

# Познакомимся с базовыми функциями данного модуля:
#         os.chdir(path) - смена текущей директории
#
#         os.getcwd() - текущая рабочая директория
#
#     os.path - является вложенным модулем в модуль os и реализует некоторые полезные функции для работы
#     с путями, такие как:
#         os.path.basename(path) - базовое имя пути
#             path = 'C:\Users\User\Documents\Учеба\Блок2\Python\Lectures\Lecture_4\test6_модуль_os_и_shutil.py'
#             print(os.path.basename(path))
#             вывод = test6_модуль_os_и_shutil.py
#         os.path.abspath(path) - возврашает нормализованные абсоютный путь
#             print(os.path.abspath('test6_модуль_os_и_shutil.py')
#             вывод = 'C:\Users\User\Documents\Учеба\Блок2\Python\Lectures\Lecture_4\test6_модуль_os_и_shutil.py'

# Модуль shutil
# Модуль shutil содержит набор функций высокого уровня для обработки файлов, групп файлов, и папок.
# В частности, доступные здесь функции позволяют копировать, перемещать и удалять файлы и папки. Часто
# используется вместе с модулем os.

# Для того, чтобы начать работать с модулем необходимо его импортировать в свою программу:

# import shutil

# Познакомимся с базовыми функциями данного модуля:
#   shutil.copyfile(src,dst)-копирует содержимое(но не метаданные) файла src в файл dst.
#   shutil.copy(src,dst) - копирует содержимое файла src в файл илм папку dst.
#   shutil.rmtree(path) - Удаляет текущую директорию и все поддиректории; path должен указывать на
#   директорию, а не на симвличесскую ссылку
